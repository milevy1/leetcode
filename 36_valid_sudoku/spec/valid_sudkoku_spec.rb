require './lib/valid_sudoku'

RSpec.describe 'Valid Sudoku' do
  context 'Input is an array of nine arrays with nine elements' do
    describe '.is_valid_sudoku(board)' do
      it 'returns true if the board is valid' do
        input = [
                  ["5","3",".",".","7",".",".",".","."],
                  ["6",".",".","1","9","5",".",".","."],
                  [".","9","8",".",".",".",".","6","."],
                  ["8",".",".",".","6",".",".",".","3"],
                  ["4",".",".","8",".","3",".",".","1"],
                  ["7",".",".",".","2",".",".",".","6"],
                  [".","6",".",".",".",".","2","8","."],
                  [".",".",".","4","1","9",".",".","5"],
                  [".",".",".",".","8",".",".","7","9"]
                ]
        expect(Sudoku.is_valid_sudoku(input)).to be_truthy
      end
    end

    describe '#parse_board' do
      it 'returns a hash with keys as coordinate, values as value' do
        input = [
                  ["5","3",".",".","7",".",".",".","."],
                  ["6",".",".","1","9","5",".",".","."],
                  [".","9","8",".",".",".",".","6","."],
                  ["8",".",".",".","6",".",".",".","3"],
                  ["4",".",".","8",".","3",".",".","1"],
                  ["7",".",".",".","2",".",".",".","6"],
                  [".","6",".",".",".",".","2","8","."],
                  [".",".",".","4","1","9",".",".","5"],
                  [".",".",".",".","8",".",".","7","9"]
                ]
        expected = {
          
        }
      end
    end
  end
end
